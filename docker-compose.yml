services:

  mysql:
    container_name: mysql
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: borzik
      MYSQL_DATABASE: borzikdatabase
      MYSQL_USER: borzik
      MYSQL_PASSWORD: borzik
    ports:
      - "3306:3306"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]

  backend:
    container_name: backend
    image: 'backend'
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
       mysql:
         condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/borzikdatabase
      SPRING_DATASOURCE_USERNAME: borzik
      SPRING_DATASOURCE_PASSWORD: borzik

  frontend:
      build:
        context: src/main/borzikfrontend
        dockerfile: Dockerfile
      ports:
        - "3000:3000"
      image: 'frontend'
      depends_on:
        - backend
  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
      - "9092:9092"
    environment:
      - SONARQUBE_JDBC_USERNAME=sonarqube
      - SONARQUBE_JDBC_PASSWORD=sonarqube
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonar
    networks:
      - sonarnet
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
        - POSTGRES_USER=sonarqube
        - POSTGRES_PASSWORD=sonarqube
    networks:
        - sonarnet
    volumes:
        - postgresql:/var/lib/postgresql
    depends_on:
      - frontend

networks:
  sonarnet:
    driver: bridge

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql: